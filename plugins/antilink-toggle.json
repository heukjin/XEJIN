import { mono } from '../../database/styler.js'
import fs from 'fs';

const dbPath = './database/antilink-toggle.json';
if (!fs.existsSync(dbPath)) fs.writeFileSync(dbPath, '{}');

export default {
  name: 'antilink',
  command: ['antilink'],
  async run({ msg, sock, args, from, sender, isGroup }) {
    if (!isGroup) {
      return sock.sendMessage(from, { text: '❌ This command only works in groups.' }, { quoted: msg });
    }

    const groupMetadata = await sock.groupMetadata(from);
    const admins = groupMetadata.participants
      .filter(p => p.admin)
      .map(p => p.id);
    const isSenderAdmin = admins.includes(sender);

    if (!isSenderAdmin) {
      return sock.sendMessage(from, { text: '🚫 Only *group admins* can toggle antilink.' }, { quoted: msg });
    }

    const data = JSON.parse(fs.readFileSync(dbPath));
    const state = (args[0] || '').toLowerCase();

    if (!['on', 'off'].includes(state)) {
      return sock.sendMessage(from, {
        text: 'Usage:\n\n.antilink on\n.antilink off'
      }, { quoted: msg });
    }

    if (state === 'on') {
      data[from] = true;
      sock.sendMessage(from, { text: '✅ Antilink has been *enabled* in this group.' }, { quoted: msg });
    } else {
      delete data[from];
      sock.sendMessage(from, { text: '❌ Antilink has been *disabled* in this group.' }, { quoted: msg });
    }

    fs.writeFileSync(dbPath, JSON.stringify(data, null, 2));
  }
};